/**
 * @packageDocumentation
 * @module api.functional.body.optional
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Resolved, Primitive } from "typia";

import type { IBodyOptional } from "../../../structures/IBodyOptional";

/**
 * @controller BodyOptionalController.json
 * @path POST /body/optional/json
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function json(
  connection: IConnection,
  body?: json.Input,
): Promise<json.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...json.METADATA,
      template: json.METADATA.path,
      path: json.path(),
    },
    body,
  );
}
export namespace json {
  export type Input = Resolved<undefined | IBodyOptional>;
  export type Output = Primitive<IBodyOptional>;

  export const METADATA = {
    method: "POST",
    path: "/body/optional/json",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/body/optional/json";
}

/**
 * @controller BodyOptionalController.plain
 * @path POST /body/optional/plain
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function plain(
  connection: IConnection,
  body?: plain.Input,
): Promise<plain.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "text/plain",
      },
    },
    {
      ...plain.METADATA,
      template: plain.METADATA.path,
      path: plain.path(),
    },
    body,
  );
}
export namespace plain {
  export type Input = Resolved<string>;
  export type Output = Primitive<string>;

  export const METADATA = {
    method: "POST",
    path: "/body/optional/plain",
    request: {
      type: "text/plain",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/body/optional/plain";
}
